#!/bin/bash

# Usage: ./PayMonQueryExecutor.sh <MonitorName>

CONFIG_FILE="PayMon.properties"
STATUS_FILE="PayMon.status"
MONITOR_NAME="$1"

# Load global settings
GLOBAL_TIMEOUT=$(grep '^global.timeout=' "$CONFIG_FILE" | cut -d'=' -f2)
GLOBAL_EMAIL=$(grep '^global.email=' "$CONFIG_FILE" | cut -d'=' -f2)

# Load monitor-specific properties
get_property() {
    grep "^$1" "$CONFIG_FILE" | cut -d'=' -f2
}

PREFIX=$(grep -i ".*\.name=$MONITOR_NAME" "$CONFIG_FILE" | cut -d'.' -f1)

if [ -z "$PREFIX" ]; then
    echo "Monitor $MONITOR_NAME not found in config."
    exit 1
fi

CRON_EXPR=$(get_property "$PREFIX.cron")
DB_CONN=$(get_property "$PREFIX.db")
SQL_QUERY=$(get_property "$PREFIX.query")
THRESHOLD_OPERATOR=$(get_property "$PREFIX.threshold.operator")
THRESHOLD_VALUE=$(get_property "$PREFIX.threshold.value")
REQUIRES_MANUAL=$(get_property "$PREFIX.manual")

# Status tracking
mkdir -p logs
STATUS_LOG="logs/${MONITOR_NAME}.log"
touch "$STATUS_FILE"
touch "$STATUS_LOG"

load_status() {
    grep "^$MONITOR_NAME:" "$STATUS_FILE" | tail -n1
}

update_status() {
    echo "$MONITOR_NAME:$1:$2:$3:$4" >> "$STATUS_FILE"
}

LAST_STATUS_LINE=$(load_status)
IFS=':' read -r NAME STATUS FAIL_COUNT SKIP_COUNT LAST_RUN <<< "$LAST_STATUS_LINE"

# Check skip conditions
if [[ "$STATUS" == "skip" ]]; then
    echo "Checking mail for resume signal for $MONITOR_NAME..."
    # Mail checking placeholder here
    RESUME_FOUND=false # Set this based on mail logic
    if $RESUME_FOUND; then
        echo "Resume mail found. Resuming $MONITOR_NAME."
        STATUS="resume"
    else
        echo "Skipping $MONITOR_NAME. No resume mail."
        SKIP_COUNT=$((SKIP_COUNT+1))
        update_status "$STATUS" "$FAIL_COUNT" "$SKIP_COUNT" "$(date)"
        exit 0
    fi
fi

# Run the job
echo "Running job $MONITOR_NAME..."
OUTPUT=$(timeout "$GLOBAL_TIMEOUT" sqlplus -S "$DB_CONN" <<EOF
set heading off
set feedback off
$SQL_QUERY;
exit;
EOF
)

if [ $? -ne 0 ]; then
    echo "Query execution failed for $MONITOR_NAME."
    FAIL_COUNT=$((FAIL_COUNT+1))
    STATUS="fail"
    if [ "$FAIL_COUNT" -ge 3 ]; then
        STATUS="skip"
        echo "Job failed 3 times. Marking as skip. Sending notification."
        echo "Subject: Job $MONITOR_NAME paused due to repeated failures" | sendmail "$GLOBAL_EMAIL"
    fi
    update_status "$STATUS" "$FAIL_COUNT" "$SKIP_COUNT" "$(date)"
    exit 1
fi

# Check threshold
if [[ "$OUTPUT" $THRESHOLD_OPERATOR "$THRESHOLD_VALUE" ]]; then
    echo "Threshold breached for $MONITOR_NAME. Value: $OUTPUT"
    echo "Subject: Threshold breach in $MONITOR_NAME. Value: $OUTPUT" | sendmail "$GLOBAL_EMAIL"
fi

# Job succeeded
echo "Job succeeded for $MONITOR_NAME."
STATUS="success"
FAIL_COUNT=0
update_status "$STATUS" "$FAIL_COUNT" "$SKIP_COUNT" "$(date)"
